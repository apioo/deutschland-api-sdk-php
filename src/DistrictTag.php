<?php
/**
 * DistrictTag automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */

namespace DeutschlandAPI\SDK;

use GuzzleHttp\Exception\BadResponseException;
use Sdkgen\Client\Exception\ClientException;
use Sdkgen\Client\Exception\Payload;
use Sdkgen\Client\Exception\UnknownStatusCodeException;
use Sdkgen\Client\TagAbstract;

class DistrictTag extends TagAbstract
{
    /**
     * Returns a specific district
     *
     * @param string $districtId
     * @return District
     * @throws ResponseException
     * @throws ClientException
     */
    public function get(string $districtId): District
    {
        $url = $this->parser->url('/district/:district_id', [
            'district_id' => $districtId,
        ]);

        $options = [
            'headers' => [
            ],
            'query' => $this->parser->query([
            ], [
            ]),
        ];

        try {
            $response = $this->httpClient->request('GET', $url, $options);
            $body = $response->getBody();

            $data = $this->parser->parse((string) $body, \PSX\Schema\SchemaSource::fromClass(District::class));

            return $data;
        } catch (ClientException $e) {
            throw $e;
        } catch (BadResponseException $e) {
            $body = $e->getResponse()->getBody();
            $statusCode = $e->getResponse()->getStatusCode();

            if ($statusCode === 400) {
                $data = $this->parser->parse((string) $body, \PSX\Schema\SchemaSource::fromClass(Response::class));

                throw new ResponseException($data);
            }

            if ($statusCode === 404) {
                $data = $this->parser->parse((string) $body, \PSX\Schema\SchemaSource::fromClass(Response::class));

                throw new ResponseException($data);
            }

            if ($statusCode === 500) {
                $data = $this->parser->parse((string) $body, \PSX\Schema\SchemaSource::fromClass(Response::class));

                throw new ResponseException($data);
            }

            throw new UnknownStatusCodeException('The server returned an unknown status code: ' . $statusCode);
        } catch (\Throwable $e) {
            throw new ClientException('An unknown error occurred: ' . $e->getMessage());
        }
    }

    /**
     * Returns all available districts
     *
     * @param int|null $startIndex
     * @param string|null $state
     * @param string|null $name
     * @return DistrictCollection
     * @throws ResponseException
     * @throws ClientException
     */
    public function getAll(?int $startIndex = null, ?string $state = null, ?string $name = null): DistrictCollection
    {
        $url = $this->parser->url('/district', [
        ]);

        $options = [
            'headers' => [
            ],
            'query' => $this->parser->query([
                'startIndex' => $startIndex,
                'state' => $state,
                'name' => $name,
            ], [
            ]),
        ];

        try {
            $response = $this->httpClient->request('GET', $url, $options);
            $body = $response->getBody();

            $data = $this->parser->parse((string) $body, \PSX\Schema\SchemaSource::fromClass(DistrictCollection::class));

            return $data;
        } catch (ClientException $e) {
            throw $e;
        } catch (BadResponseException $e) {
            $body = $e->getResponse()->getBody();
            $statusCode = $e->getResponse()->getStatusCode();

            if ($statusCode === 400) {
                $data = $this->parser->parse((string) $body, \PSX\Schema\SchemaSource::fromClass(Response::class));

                throw new ResponseException($data);
            }

            if ($statusCode === 404) {
                $data = $this->parser->parse((string) $body, \PSX\Schema\SchemaSource::fromClass(Response::class));

                throw new ResponseException($data);
            }

            if ($statusCode === 500) {
                $data = $this->parser->parse((string) $body, \PSX\Schema\SchemaSource::fromClass(Response::class));

                throw new ResponseException($data);
            }

            throw new UnknownStatusCodeException('The server returned an unknown status code: ' . $statusCode);
        } catch (\Throwable $e) {
            throw new ClientException('An unknown error occurred: ' . $e->getMessage());
        }
    }



}
