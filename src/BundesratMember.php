<?php
/**
 * BundesratMember automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */

namespace DeutschlandAPI\SDK;


class BundesratMember implements \JsonSerializable, \PSX\Record\RecordableInterface
{
    protected ?string $honorificTitle = null;
    protected ?string $firstName = null;
    protected ?string $name = null;
    protected ?string $party = null;
    protected ?string $state = null;
    protected ?bool $member = null;
    protected ?bool $designated = null;
    protected ?string $url = null;
    protected ?string $imagePath = null;
    protected ?\PSX\DateTime\LocalDateTime $imageDate = null;
    protected ?string $detail = null;
    protected ?string $bio = null;
    protected ?string $address = null;
    public function setHonorificTitle(?string $honorificTitle): void
    {
        $this->honorificTitle = $honorificTitle;
    }
    public function getHonorificTitle(): ?string
    {
        return $this->honorificTitle;
    }
    public function setFirstName(?string $firstName): void
    {
        $this->firstName = $firstName;
    }
    public function getFirstName(): ?string
    {
        return $this->firstName;
    }
    public function setName(?string $name): void
    {
        $this->name = $name;
    }
    public function getName(): ?string
    {
        return $this->name;
    }
    public function setParty(?string $party): void
    {
        $this->party = $party;
    }
    public function getParty(): ?string
    {
        return $this->party;
    }
    public function setState(?string $state): void
    {
        $this->state = $state;
    }
    public function getState(): ?string
    {
        return $this->state;
    }
    public function setMember(?bool $member): void
    {
        $this->member = $member;
    }
    public function getMember(): ?bool
    {
        return $this->member;
    }
    public function setDesignated(?bool $designated): void
    {
        $this->designated = $designated;
    }
    public function getDesignated(): ?bool
    {
        return $this->designated;
    }
    public function setUrl(?string $url): void
    {
        $this->url = $url;
    }
    public function getUrl(): ?string
    {
        return $this->url;
    }
    public function setImagePath(?string $imagePath): void
    {
        $this->imagePath = $imagePath;
    }
    public function getImagePath(): ?string
    {
        return $this->imagePath;
    }
    public function setImageDate(?\PSX\DateTime\LocalDateTime $imageDate): void
    {
        $this->imageDate = $imageDate;
    }
    public function getImageDate(): ?\PSX\DateTime\LocalDateTime
    {
        return $this->imageDate;
    }
    public function setDetail(?string $detail): void
    {
        $this->detail = $detail;
    }
    public function getDetail(): ?string
    {
        return $this->detail;
    }
    public function setBio(?string $bio): void
    {
        $this->bio = $bio;
    }
    public function getBio(): ?string
    {
        return $this->bio;
    }
    public function setAddress(?string $address): void
    {
        $this->address = $address;
    }
    public function getAddress(): ?string
    {
        return $this->address;
    }
    public function toRecord(): \PSX\Record\RecordInterface
    {
        /** @var \PSX\Record\Record<mixed> $record */
        $record = new \PSX\Record\Record();
        $record->put('honorificTitle', $this->honorificTitle);
        $record->put('firstName', $this->firstName);
        $record->put('name', $this->name);
        $record->put('party', $this->party);
        $record->put('state', $this->state);
        $record->put('member', $this->member);
        $record->put('designated', $this->designated);
        $record->put('url', $this->url);
        $record->put('imagePath', $this->imagePath);
        $record->put('imageDate', $this->imageDate);
        $record->put('detail', $this->detail);
        $record->put('bio', $this->bio);
        $record->put('address', $this->address);
        return $record;
    }
    public function jsonSerialize(): object
    {
        return (object) $this->toRecord()->getAll();
    }
}
